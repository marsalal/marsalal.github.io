<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>development on Marco Salazar</title><link>https://marsalal.github.io/tags/development/</link><description>Recent content in development on Marco Salazar</description><generator>Hugo -- gohugo.io</generator><language>en-us, es-es</language><lastBuildDate>Wed, 15 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://marsalal.github.io/tags/development/index.xml" rel="self" type="application/rss+xml"/><item><title>Tips to become a better software developer</title><link>https://marsalal.github.io/post/better-dev/</link><pubDate>Wed, 15 Feb 2023 00:00:00 +0000</pubDate><guid>https://marsalal.github.io/post/better-dev/</guid><description>Improving as a software developer requires a combination of both technical and non-technical skills. Over the years, I have had to change and evolve how I interact with my teammates and how I play my role as a software developer in my workplace. Here are a few tips to help you on your journey that helped me in the past years:
Keep learning: Technology is constantly evolving, so it&amp;rsquo;s essential to keep up-to-date with the latest trends and advancements in your field.</description></item><item><title>Retry policy as part of fault-tolerant service</title><link>https://marsalal.github.io/post/retry-policy/</link><pubDate>Tue, 24 Jan 2023 00:00:00 +0000</pubDate><guid>https://marsalal.github.io/post/retry-policy/</guid><description>Retry policies are a crucial aspect of a robust and fault-tolerant application. Retry policies allow an application to automatically retry a failed operation in the event of a transient error, such as a temporary network outage or a busy database server. In this blog post, we will discuss the benefits of using retry policies in a C# application, as well as some potential drawbacks to consider when implementing them.
Benefits of Retry Policies:</description></item></channel></rss>